type UserRequestForAffirmation @entity {
  "id is the messageId"
  id: ID!

  txHash: Bytes!
  blockNo: BigInt!
  timestamp: BigInt!

  "event params"
  messageId: Bytes!
  encodedData: Bytes!
}

type UserRequestForSignature @entity {
  "id is the messageId"
  id: ID!

  txHash: Bytes!
  blockNo: BigInt!
  timestamp: BigInt!

  "event params"
  messageId: Bytes!
  encodedData: Bytes!
}

type RelayedMessage @entity {
  "id is the messageId"
  id: ID!

  txHash: Bytes!
  blockNo: BigInt!
  timestamp: BigInt!

  "event params"
  sender: Bytes!
  executor: Bytes!
  messageId: Bytes!
  status: Boolean!
}

type AffirmationCompleted @entity {
  "id is the messageId"
  id: ID!
  
  txHash: Bytes!
  blockNo: BigInt!
  timestamp: BigInt!

  "event params"
  sender: Bytes!
  executor: Bytes!
  messageId: Bytes!
  status: Boolean!
}

type CollectedSignature @entity {
  "id is the messageId"
  id: ID!

  txHash: Bytes!
  blockNo: BigInt!
  timestamp: BigInt!

  "event params"
  authorityResponsibleForRelay: Bytes!
  messageHash: Bytes
  numberOfCollectedSignatures: BigInt
}

type Message @entity {
  "id is the messageId"
  id: ID!

  txHash: String
  sender: String

  userRequestForAffirmation: UserRequestForAffirmation
  userRequestForSignature: UserRequestForSignature
  relayedMessage: RelayedMessage
  affirmationCompleted: AffirmationCompleted
  collectedSignature: CollectedSignature

}

type ValidatorAdded @entity {
  id: ID!

  blockNo: BigInt!

  validator: Bytes
}

type ValidatorRemoved @entity {
  id: ID!

  blockNo: BigInt!
  
  validator: Bytes
}

type RequiredSignaturesChanged @entity {
  id: ID!

  blockNo: BigInt!
  
  requiredSignatures: BigInt
}

type RequiredBlockConfirmationChanged @entity {
  id: ID!

  blockNo: BigInt!

  requiredBlockConfirmations: BigInt
}
